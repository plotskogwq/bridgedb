##
## Options for GnuPG
##
## :author: isis <isis@patternsinthevoid.net>

no-greeting
no-emit-version
charset utf-8
display-charset utf-8
utf8-strings
keyid-format long
default-key 8DC43A2848821E32
trusted-key CBD97AA24E8E472E

# When outputting certificates, view user IDs distinctly from keys:
fixed-list-mode

verify-options no-show-photos show-uid-validity show-notations show-user-notations show-policy-urls show-keyserver-urls no-pka-lookups no-pka-trust-increase

list-options no-show-photos show-uid-validity no-show-unusable-uids show-unusable-subkeys show-notations show-user-notations show-policy-urls show-keyserver-urls show-sig-expire show-sig-subpackets

export-options no-export-attributes

# Because some mailers change lines starting with "From " to ">From "
# it is good to handle such lines in a special way when creating
# cleartext signatures; all other PGP versions do it this way too.
#no-escape-from-lines

## Indymedia Keyservers:
##----------------------
keyserver hkps://2eghzlv2wwcq7u7y.onion
keyserver hkp://2eghzlv2wwcq7u7y.onion
keyserver hkps://keys.indymedia.org
keyserver hkp://keys.indymedia.org
keyserver https://keys.indymedia.org
keyserver http://keys.indymedia.org
keyserver https://qtt2yl5jocgrk7nu.onion
keyserver http://qtt2yl5jocgrk7nu.onion
keyserver-options ca-cert-file=~/scripts/certs/keys.indymedia.org

## Normal keyservers:
##--------------------
keyserver hkp://subkeys.pgp.net
keyserver mailto:pgp-public-keys@keys.pgp.net
keyserver pgp.mit.edu

keyserver-options verbose verbose verbose no-include-revoked no-include-disabled no-auto-key-retrieve no-honor-keyserver-url no-honor-pka-record include-subkeys no-include-attributes

#keyserver-options http-proxy=socks://127.0.0.1:59050

expert
allow-freeform-uid
cert-digest-algo SHA512
digest-algo SHA512
default-preference-list SHA512 SHA384 SHA256 CAMELLIA256 AES256 ZLIB ZIP Uncompressed
personal-cipher-preferences CAMELLIA256 AES256
personal-digest-preferences SHA512 SHA384 SHA256
personal-compress-preferences ZLIB ZIP
compress-level 9
default-cert-expire 2y
ask-cert-expire
ask-cert-level
default-sig-expire 1y
no-ask-sig-expire

## algorithm to protect the key in memory:
s2k-cipher-algo AES256

## use this one to mangle the passphrases:
s2k-digest-algo SHA512

## passphrase mangling mode:
## 0=plaintest
## 1=salt
## 3=salt+iteration
s2k-mode 3

## how mangly should we mangle it? 1024 < mangle < 65011712
##
## try "python -c'import random;a=random.randint(32505856, 65011712);print a'
s2k-count 48454407

## Don't run if we can't secure mempages
require-secmem

## Check the back sig on subkey which has made a signature
require-cross-certification

## The notation on certifications we make:
## see http://thread.gmane.org/gmane.mail.notmuch.general/3721/focus=7234
sig-notation bridges@bridges.torproject.org=%g
cert-notation bridges@bridges.torproject.org=%g
cert-notation verified@torproject.org=%f
set-policy-url https://bridges.torproject.org/policy.txt
sig-keyserver-url !https://bridges.torproject.org/key.asc
default-keyserver-url https://bridges.torproject.org/key.asc
