To set up:
 - Install Python 2.4 or later.
 - Install depdencencies. On Debian, you can do:
   sudo apt-get install python-twisted python-openssl python-ipaddr \
        python-gpgme python-babel python-recaptcha python-beautifulsoup \
	python-mako
 - If you use a virtualenv, we recommend you use pip 1.3.1 or later, else it
   will download over http. You can install dependencies with:
   pip install -r requirements.txt
   Note that some dependencies (ipaddr) do not have SSL URLs in the pypi index
   and will still download over http.
 - To run unit tests, "python setup.py test"
 - Set the prefix in setup.cfg, or comment out if using a virtualenv
 - python setup.py install
 - To generate translation files, run "python setup.py trans" 
 - Run "python setup.py install_data" to install them
 - Edit bridgedb.conf; put it somewhere good.
 - Make sure that the input files referred to in bridgedb.conf exist.
   - You can make a self-signed certificate with
     openssl req -x509 -new -nodes > cert
 - Set up PYTHONPATH to include "~/lib/python2.6/site-packages/".
 - To install Maxmind GeoIP
   - Debian: apt-get install python-geoip
   - Others: http://www.maxmind.com/app/python 
 - To enable recaptcha support
   - set the options RECAPTCHA_ENABLED, RECAPTCHA_PUB_KEY,
     and RECAPTCHA_PRIV_KEY in bridgedb.conf. 
   - A recaptcha.net account is required. 
   - Install these required packages:
     - Debian: apt-get install python-recaptcha python-beautifulsoup
       python-gpgme
     - Python: pip install recaptcha-client BeautifulSoup pygpgme
     - Others: http://pypi.python.org/pypi/recaptcha-client
               http://pypi.python.org/pypi/BeautifulSoup
               http://pypi.python.org/pypi/pygpgme

To translate:
   - extract all strings:
      python setup.py extract_messages
      a .pot file will be created in ./i18n/templates/bridgedb.pot
   - init catalogs for each desired languages:
      python setup.py init_catalog -l LANG
      (where 'LANG' is the 2 or 4 letter country-code, eg. 'es')
   - edit strings in ./i18n/LANG/bridgedb.po
   - convert to binary format
     python setup.py compile_catalog
   - Don't forget to reinstall to update the templates!:
     python setup.py install

To run:
 - Run "python -m TorBridgeDB bridgedb.conf"

 - When you have new lists of bridges, replace the old files and send the
   process a sighup.

To extract bucket files with unallocated bridges:

 -  Edit the configuration file value 'FILE_BUCKETS' according to your needs.
    For example, the following is a possible configuration:

            FILE_BUCKETS = { "name1": 10, "name2": 15, "foobar": 3 }

    This configuration for buckets would result in 3 files being created for 
    bridge distribution: name1-2010-07-17.brdgs, name2-2010-07-17.brdgs and 
    foobar-2010-07-17.brdgs. The first file would contain 10 bridges from 
    BridgeDB's 'unallocated' pool. The second file would contain 15 bridges 
    from the same pool and the third one similarly 3 bridges. These files can 
    then be handed out to trusted parties via mail or fed to other distribution
    mechanisms such as twitter.

To use with HTTPS:
 - Just connect to the appropriate port.

To use with email:
 - Any mail sent to the email port with a subject or a single line _exactly_
   equal to "get bridges" will get answered, assuming the domain is okay.

To indicate which bridges are blocked:
 - Uncomment or add COUNTRY_BLOCK_FILE to your bridgedb.conf
 - The syntax of the COUNTRY_BLOCK_FILE, 1 entry per line:
   fingerprint <bridge fingerprint> country-code <country code>
 - If this file is present, bridgedb will filter blocked bridges from responses
 - For GeoIP support make sure to install Maxmind GeoIP

To sign emails with gpg:
 - Add these two options to your bridgedb.conf:

            EMAIL_GPG_SIGNING_ENABLED, EMAIL_GPG_SIGNING_KEY
    
   The former may be either True or False, and the latter must
   point to the ascii-armored key file. The keyfile must not be
   passphrase protected.

To update the SQL schema:
 - Install sqlite3:
   - Debian: apt-get install sqlite3
   - Others: http://www.sqlite.org/download.html 
 - Run "sqlite3  path/to/bridgedist.db.sqlite"
 - Enter the following commands at the prompt: sqlite>
   CREATE TABLE BlockedBridges ( id INTEGER PRIMARY KEY NOT NULL, hex_key, blocking_country);
   CREATE INDEX BlockedBridgesBlockingCountry on BlockedBridges(hex_key);
   CREATE TABLE WarnedEmails ( email PRIMARY KEY NOT NULL, when_warned);
   CREATE INDEX WarnedEmailsWasWarned on WarnedEmails ( email );
   REPLACE INTO Config VALUES ( 'schema-version', 2 );
 
Support
 - Send your questions to aagbsn@torproject.org.
